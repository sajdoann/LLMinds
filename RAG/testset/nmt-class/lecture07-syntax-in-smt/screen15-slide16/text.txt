 So how do we use these context-free grammars for machine translation? The idea is that each of these rules will not only have the source side for the source language, but also the target side for the target language. Remember, it is something else for a rule to talk about its left-hand side and right-hand side and the source language and the target language. So here is an example. Again, it's Chinese to English translation, as in the hierarchical system. For simplicity, this is the hierarchical system rule. So it has only the one non-terminal called X. And the left-hand side of the rule is indicating what can be expanded and the right-hand side is indicated what we are expanding into. And the right-hand side has two parts, the source language and then the thick red bar and then the target language. So if you see something, the Chinese character and something else in Chinese, then this can be translated as the two things reversed and the preposition in between in English. So this rule specifies that the English phrase something in somewhere is translated as these two things swapped in Chinese. with this Chinese position marker. So in Chinese, the order of something being somewhere is different than in English. And this rule indicates it by the coindexation of the non-terminals in the right-hand side of the rule. So you see that X0 and X1 have swapped their position in the left-hand side position. So this is formally a synchronous context-free grammar that captures the double generation. You start from this non-terminal X and you do the non-terminal X. And you generate the trees in the two languages in parallel, in source and target languages in parallel. The problem is that the non-terminals in the whole tree have to match exactly...