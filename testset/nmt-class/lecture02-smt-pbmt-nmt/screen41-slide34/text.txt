 So here is a very brief summary for those who have not really worked with a neural network so far. The task is simply classifying whether a given point is in the center of an area or whether it is in on the circumference of a circle. And so what you have, you have the coordinates, the x1 coordinate and x2 coordinate of the point that you are asking. is just a line. So each of these hidden neurons, each of these three neurons in the hidden layer, has the capacity of separating points on one side of the line and points from points on the other side of the line. The actual slope or position of the line is something which is specified by the weights. So when you run this system, and you can see that on that Google webpage, and tensorflow.org, if you run it, it will juggle with the weights. So at the beginning, these three lines of each of these neurons will be positioned randomly and it will not work. But very quickly, it will realize that it can use these three lines to cut like a triangle. And with that triangle, it approximates what is in the center. So then the final neuron, which combines these three hidden ones, only checks whether all the neurons fired the correct side. So if all of them fired the correct side, we're in the middle. If any of them fired that they're on the wrong side of the line, then we know that we are on the circumference. So that is how the final decision is made. These weights are identified automatically based on your training data. Training data are many points in this space that are manually labeled for the color. So this is a situation which is perfect for this deep training. Deep learning is deep as soon as you have only a single layer of hidden neurons. So this is already... ... ... ... ... ... ... ... ...