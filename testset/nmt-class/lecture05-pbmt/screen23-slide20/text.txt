 is actually exponential given the sentence length. So this suggests that machine translation is NP-hard problem and it is indeed. So already before 2000 there was a proof that machine translation is NP-hard. And it's important to know this. So how to prove NP-hardness. I'm just now recalling your basic computer science knowledge. If you are proving NP-completeness of something you have to prove that you can validate the solution in a polynomial time and the NP-hardness itself. You have to use your task as a black box to solve some established NP-complete task. And the two reductions that Kevin Knight has illustrated in his paper was the reduction of the Hamiltonian circuit and or traveling salesman problem to the finding of the best word order given a bigram language model. So we have this black box that can solve machine translation and this black box is follows internally the bigram language model. Obviously if a sentence is a good sentence then the the bigrams are going to be so that's why this magical MT system which performs the the finding of the best ordering in polynomial time. So that's the that's the assumption that we have this black box that manages it in polynomial time. We'll use the the background probabilities. So we are now given a task an assignment of the Hamiltonian circuit or traveling salesman problem and we need to convert it to the assignment to the assignment to this magical black box empty system that considers bigrams. And that's pretty easy to do. So we are given a graph and we are given edges in the graph and the question is whether there is the Hamiltonian circuit that goes through all the nodes and each of the nodes is covered exactly once. So given this assignment we convert it to the task in machine translation. The we will we will label each of the given nodes with a word that together form a sentence and whenever there is an edge in the graph we will license that bigram in the in the bigram language model. So we create a bigram language model based on the graph description based on the set of nodes and edges. and we will find the path through this starting at the boundary node and covering all the words and coming back to the boundary node. So that will be the most likely bigram based ordering of the of the words. we convert the solution of the machine translation sub-problem into the Hamiltonian circuit solution. So if we claim that the NP system... the magical black box can do it in polynomial time. Then we have solved Hamiltonian circuit in polynomial time. So that's the proof of NP hardness of machine translation because we have reduced and well-known NP complete problem into machine translation subtile.