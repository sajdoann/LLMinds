 Here is another proof and that is selecting the subset selecting multiword expressions to cover the whole sentence. So the well-known NP complete task is called minimum set cover. It's related to the back optimization problem. So what you have as the assignment is a set of nodes. These nodes are now written here as words. so we map them to the words when doing the direction and you also have a set of sets or sets of these nodes. And the task is to find the minimum set of these sets so that all your input nodes are covered. So that's the minimum set cover. And the way we map this to a subtask of machine translation is that we use words in some source language to denote the original nodes that we want to cover. And we use the multiword phrases so multiword translation units to represent the allowed sets of the source words. So here the reduction goes into the Spanish into English translation and the input nodes were this con, todo, and the output, well I don't speak Spanish sorry for the pronunciation and then Ella, Asia, la comida and so on. And the sets that were given up front are the sets of Spanish words. So con, todo together can be translated as however. And con alone can be translated as with and todo can be translated as everything. And this together can be translated as obtained. So this is an illustration how the input nodes and the sets can be casted as the question which words should be translated jointly in one single multiword expression. So we do that is the same. So we use this conversion. We run the magical machine translation system that chooses the best translation. And the best translation system will say to pick the con, todo, then coma and then ela and then has c, la comida and e. So the translations of these are however, she cooked and left full stop. the magical empty system did this in the polynomial time. So it was able to solve the minimum set covering polynomial time. If p does not equal NP, then we can conclude that machine translation is NP.